}
map2_dfr(data_list$lists$Var1,data_list$lists$Var2,
possibly(~read_page(country = .x,index = .y),otherwise = NULL,quiet = TRUE))|>
pivot_longer(!c(date, country_abb), names_to = "index",values_to = "rate",values_drop_na = TRUE) |>
left_join(data_list$country_code, by = c("country_abb" = "wb_api2c")) |>
left_join(data_list$index_df, by = c("index" = "indexes")) |>
rename("country_name" = country.name.en)
}
lists
box::use(
app/logic/get_data[load_data],
readr[write_rds]
)
load_data() |>
write_rds(file = "app/logic/df.rds")
View(df)
lists
View(lists)
box::use(
dplyr[select,distinct,pull,mutate,rename,left_join],
tidyr[drop_na,pivot_longer],
readr[read_csv],
purrr[set_names,map2_dfr,possibly],
tibble[tibble],
)
box::use(
app/logic/data_list
)
# Datasets
#' @export
load_data <- function() {
read_page <- function(country, index) {
Sys.sleep(sample(1:10,size = 1,replace = TRUE))
read_csv(paste0("https://www.econdb.com/api/series/",index,country, "/?format=csv"),
show_col_types = FALSE, col_types = "Ddc") |>
mutate(country_abb = country) |>
rename(index = paste0(index,country)) |>
set_names(c("date", index, "country_abb"))
}
map2_dfr(data_list$lists$Var1,data_list$lists$Var2,
possibly(~read_page(country = .x,index = .y),otherwise = NULL,quiet = TRUE))|>
pivot_longer(!c(date, country_abb), names_to = "index",values_to = "rate",values_drop_na = TRUE) |>
left_join(data_list$country_code, by = c("country_abb" = "wb_api2c")) |>
left_join(data_list$index_df, by = c("index" = "indexes")) |>
rename("country_name" = country.name.en)|>
write_rds(file = "app/logic/df.rds")
}
box::use(
app/logic/get_data[load_data],
readr[write_rds]
)
load_data()
box::use(
countrycode,
dplyr[select,distinct,pull],
tidyr[drop_na],
tibble[tibble],
)
# index names
#' @export
index_names <- c("Customer Price Index", "Unemployment"
,"Real gross fixed capital formation"
, "Real public consumption"
, "Retail trade"
, "Industrial production"
, "Real gross domestic product"
, "Consumer confidence index"
, "Producer price index"
, "Government debt"
, "Gross domestic product"
, "Real private consumption"
, "House price"
, "Utilization rate"
, "Sentiment index"
, "Commercial balance (goods + services)"
, "Public consumption"
, "Private consumption"
, "Gross fixed capital formation"
, "Exports of goods and services"
, "Real change in inventories"
, "Real exports of goods and services"
, "Stock exchange index"
, "Real imports of goods and services"
, "Imports of goods and services"
, "Population"
, "Change in inventories"
, "Government balance"
, "Total employment"
, "Job vacancy rate"
, "Job quits rate"
, "GDP per capital"
, "Real GDP per capital"
, "General government total expenditure"
, "General government total revenue"
, "Money supply"
, "Current account balance"
, "Hourly wage manufacturing"
, "Job layoffs rate"
, "Job hires rate"
, "Oil production"
, "Production electricity")
# country codes and names
#' @export
country_code <- countrycode::codelist_panel |>
select(country.name.en, wb_api2c ) |>
distinct() |>
drop_na()
# just country codes
#' @export
country_codes <- country_code |> pull(wb_api2c)
# just index codes
#' @export
indexes <- c("CPI", "URATE", "RGFCF", "RPUC","RETA",
"IP", "RGDP","CONF","PPI","GDEBT","GDP",
"RPRC","HOU","UTIL","SENT","CBAL","PUC",
"PRC", "GFCF", "EXP", "RCI", "REXP","SEI",
"RIMP","IMP","POP","CI","GBAL","EMP","JVR",
"JQR","GDPPC","RGDPPC","GSPE","GREV","M3",
"CA","WAGEMAN","JLR","JHR","OILPROD","ELE")
# index code + names
#' @export
index_df <- tibble(index_names = index_names ,  indexes = indexes)
# the data we will import
#' @export
lists <- expand.grid(country_codes,indexes,stringsAsFactors = FALSE)
box::use(
dplyr[select,distinct,pull,mutate,rename,left_join],
tidyr[drop_na,pivot_longer],
readr[read_csv],
purrr[set_names,map2_dfr,possibly],
tibble[tibble],
)
box::use(
app/logic/data_list
)
# Datasets
#' @export
load_data <- function() {
read_page <- function(country, index) {
Sys.sleep(sample(1:10,size = 1,replace = TRUE))
read_csv(paste0("https://www.econdb.com/api/series/",index,country, "/?format=csv"),
show_col_types = FALSE, col_types = "Ddc") |>
mutate(country_abb = country) |>
rename(index = paste0(index,country)) |>
set_names(c("date", index, "country_abb"))
}
map2_dfr(data_list$lists$Var1,data_list$lists$Var2,
possibly(~read_page(country = .x,index = .y),otherwise = NULL,quiet = TRUE))|>
pivot_longer(!c(date, country_abb), names_to = "index",values_to = "rate",values_drop_na = TRUE) |>
left_join(data_list$country_code, by = c("country_abb" = "wb_api2c")) |>
left_join(data_list$index_df, by = c("index" = "indexes")) |>
rename("country_name" = country.name.en)|>
write_rds(file = "app/logic/df.rds")
}
box::use(
app/logic/get_data[load_data],
readr[write_rds]
)
load_data()
read_rds("app/logic/df.rds")
lists
box::use(
dplyr[select,distinct,pull,mutate,rename,left_join],
tidyr[drop_na,pivot_longer],
readr[read_csv],
purrr[set_names,map2_dfr,possibly],
tibble[tibble],
)
box::use(
app/logic/data_list[data_list,country_code,index_df]
)
data_list$lists$Var2
data_list$lists
#' @export
lists <- expand.grid(country_codes,indexes,stringsAsFactors = FALSE)
data_list$lists
box::use(
countrycode,
dplyr[select,distinct,pull],
tidyr[drop_na],
tibble[tibble],
)
# index names
#' @export
index_names <- c("Customer Price Index", "Unemployment"
,"Real gross fixed capital formation"
, "Real public consumption"
, "Retail trade"
, "Industrial production"
, "Real gross domestic product"
, "Consumer confidence index"
, "Producer price index"
, "Government debt"
, "Gross domestic product"
, "Real private consumption"
, "House price"
, "Utilization rate"
, "Sentiment index"
, "Commercial balance (goods + services)"
, "Public consumption"
, "Private consumption"
, "Gross fixed capital formation"
, "Exports of goods and services"
, "Real change in inventories"
, "Real exports of goods and services"
, "Stock exchange index"
, "Real imports of goods and services"
, "Imports of goods and services"
, "Population"
, "Change in inventories"
, "Government balance"
, "Total employment"
, "Job vacancy rate"
, "Job quits rate"
, "GDP per capital"
, "Real GDP per capital"
, "General government total expenditure"
, "General government total revenue"
, "Money supply"
, "Current account balance"
, "Hourly wage manufacturing"
, "Job layoffs rate"
, "Job hires rate"
, "Oil production"
, "Production electricity")
# country codes and names
#' @export
country_code <- countrycode::codelist_panel |>
select(country.name.en, wb_api2c ) |>
distinct() |>
drop_na()
# just country codes
#' @export
country_codes <- country_code |> pull(wb_api2c)
# just index codes
#' @export
indexes <- c("CPI", "URATE", "RGFCF", "RPUC","RETA",
"IP", "RGDP","CONF","PPI","GDEBT","GDP",
"RPRC","HOU","UTIL","SENT","CBAL","PUC",
"PRC", "GFCF", "EXP", "RCI", "REXP","SEI",
"RIMP","IMP","POP","CI","GBAL","EMP","JVR",
"JQR","GDPPC","RGDPPC","GSPE","GREV","M3",
"CA","WAGEMAN","JLR","JHR","OILPROD","ELE")
# index code + names
#' @export
index_df <- tibble(index_names = index_names ,  indexes = indexes)
# the data we will import
#' @export
lists <- expand.grid(country_codes,indexes,stringsAsFactors = FALSE)
data_list$lists
country_codes
indexes
# the data we will import
#' @export
lists <- expand.grid(country_codes,indexes,stringsAsFactors = FALSE)
lists
# the data we will import
#' @export
lists <- expand.grid(country_codes,indexes,stringsAsFactors = FALSE)
lists
data_list$lists
box::use(
dplyr[select,distinct,pull,mutate,rename,left_join],
tidyr[drop_na,pivot_longer],
readr[read_csv],
purrr[set_names,map2_dfr,possibly],
tibble[tibble],
)
box::use(
app/logic/data_list[data_list]
)
box::use(
dplyr[select,distinct,pull,mutate,rename,left_join],
tidyr[drop_na,pivot_longer],
readr[read_csv],
purrr[set_names,map2_dfr,possibly],
tibble[tibble],
)
box::use(
app/logic/data_list
)
data_list$lists
box::use(
countrycode,
dplyr[select,distinct,pull],
tidyr[drop_na],
tibble[tibble],
)
# index names
#' @export
index_names <- c("Customer Price Index", "Unemployment"
,"Real gross fixed capital formation"
, "Real public consumption"
, "Retail trade"
, "Industrial production"
, "Real gross domestic product"
, "Consumer confidence index"
, "Producer price index"
, "Government debt"
, "Gross domestic product"
, "Real private consumption"
, "House price"
, "Utilization rate"
, "Sentiment index"
, "Commercial balance (goods + services)"
, "Public consumption"
, "Private consumption"
, "Gross fixed capital formation"
, "Exports of goods and services"
, "Real change in inventories"
, "Real exports of goods and services"
, "Stock exchange index"
, "Real imports of goods and services"
, "Imports of goods and services"
, "Population"
, "Change in inventories"
, "Government balance"
, "Total employment"
, "Job vacancy rate"
, "Job quits rate"
, "GDP per capital"
, "Real GDP per capital"
, "General government total expenditure"
, "General government total revenue"
, "Money supply"
, "Current account balance"
, "Hourly wage manufacturing"
, "Job layoffs rate"
, "Job hires rate"
, "Oil production"
, "Production electricity")
# country codes and names
#' @export
country_code <- countrycode::codelist_panel |>
select(country.name.en, wb_api2c ) |>
distinct() |>
drop_na()
# just country codes
#' @export
country_codes <- country_code |> pull(wb_api2c)
# just index codes
#' @export
indexes <- c("CPI", "URATE", "RGFCF", "RPUC","RETA",
"IP", "RGDP","CONF","PPI","GDEBT","GDP",
"RPRC","HOU","UTIL","SENT","CBAL","PUC",
"PRC", "GFCF", "EXP", "RCI", "REXP","SEI",
"RIMP","IMP","POP","CI","GBAL","EMP","JVR",
"JQR","GDPPC","RGDPPC","GSPE","GREV","M3",
"CA","WAGEMAN","JLR","JHR","OILPROD","ELE")
# index code + names
#' @export
index_df <- tibble(index_names = index_names ,  indexes = indexes)
# the data we will import
#' @export
lists <- expand.grid(country_codes,indexes,stringsAsFactors = FALSE)
box::use(
dplyr[select,distinct,pull,mutate,rename,left_join],
tidyr[drop_na,pivot_longer],
readr[read_csv],
purrr[set_names,map2_dfr,possibly],
tibble[tibble],
)
box::use(
app/logic/data_list
)
data_list$lists
box::use(
dplyr[select,distinct,pull,mutate,rename,left_join],
tidyr[drop_na,pivot_longer],
readr[read_csv],
purrr[set_names,map2_dfr,possibly],
tibble[tibble],
)
box::use(
app/logic/data_list
)
# Datasets
#' @export
load_data <- function() {
read_page <- function(country, index) {
Sys.sleep(sample(1:10,size = 1,replace = TRUE))
read_csv(paste0("https://www.econdb.com/api/series/",index,country, "/?format=csv"),
show_col_types = FALSE, col_types = "Ddc") |>
mutate(country_abb = country) |>
rename(index = paste0(index,country)) |>
set_names(c("date", index, "country_abb"))
}
map2_dfr(data_list$lists$Var1,data_list$lists$Var2,
possibly(~read_page(country = .x,index = .y),otherwise = NULL,quiet = TRUE))|>
pivot_longer(!c(date, country_abb), names_to = "index",values_to = "rate",values_drop_na = TRUE) |>
left_join(data_list$country_code, by = c("country_abb" = "wb_api2c")) |>
left_join(data_list$index_df, by = c("index" = "indexes")) |>
rename("country_name" = country.name.en)|>
write_rds(file = "app/logic/df.rds")
}
data_list$lists
box::use(
app/logic/get_data[load_data],
readr[write_rds]
)
load_data()
library(rhino)
library(echarts4r)
library(naniar)
library(reactable)
library(htmlwidgets)
library(countrycode)
library(readr)
library(tidyr)
library(dplyr)
library(purrr)
box::use(
app/logic/get_data[load_data],
app/view/plot,
)
shiny::runApp()
runApp()
8.64e+7
runApp()
install.packages("bslib")
library(bslib)
install.packages("htmltools")
library(bslib)
library(htmltools)
library(bslib)
remove.packages("rlang")
install.packages("rlang")
library(bslib)
shiny::runApp()
# This file allows packrat (used by rsconnect during deployment) to pick up dependencies.
library(rhino)
library(echarts4r)
library(naniar)
library(reactable)
library(htmlwidgets)
library(countrycode)
library(readr)
library(tidyr)
library(dplyr)
library(purrr)
runApp()
shiny::runApp()
library(rhino)
library(echarts4r)
library(naniar)
library(reactable)
library(htmlwidgets)
library(countrycode)
library(readr)
library(tidyr)
library(dplyr)
library(purrr)
library(bslib)
renv::snapshot()
y
runApp()
box::use(
shiny[moduleServer, NS,selectInput]
)
box::use(data_list)
runApp()
box::use(
shiny[moduleServer, NS,selectInput]
)
box::use(app/logic/data_list)
#' @export
ui <- function(id) {
ns <- NS(id)
selectInput(ns("input_country"),
label = "Select Country",
choices =data_list$country_codes,
selected = "Turkey",multiple = FALSE )
}
#' @export
server <- function(id) {
moduleServer(id, function(input, output, session) {
})
}
runApp()
country_codes
index_df
country_code
#' @export
country_names <- country_code |> pull(country.name.en)
country_names
runApp()
div
runApp()
box::use(
shiny[moduleServer, NS,selectInput]
)
box::use(app/logic/data_list)
#' @export
ui <- function(id) {
ns <- NS(id)
selectInput(ns("input_index"),
label = "Select Index",
choices =data_list$index_names,
selected = "Turkey",multiple = FALSE )
}
#' @export
server <- function(id) {
moduleServer(id, function(input, output, session) {
})
}
box::use(
app/logic/get_data[load_data],
app/view/plot,
app/view/input_country,
app_view/input_index
)
runApp()
